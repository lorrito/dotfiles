{"expdef":{"body":["import express, { Request, Response, NextFunction } from \"express\";","import helmet from \"helmet\";","","const app = express();","app.use(helmet());","app.disable(\"x-powered-by\");","app.use(express.json());","","const port = process.env.PORT;","","app.use((req: Request, res: Response, next: NextFunction) => {","  res.status(404).send(\"Page not found\");","});","","app.listen(port, () => {","  console.log(\"app listening on port 3000\");","});"],"prefix":"expdef"},"reqres":{"body":"req: Request, res: Response","prefix":"reqres"},"prism":{"body":["import { PrismaClient } from \"@prisma\/client\";","","const prisma = new PrismaClient();","","async function main() {","  \/\/ ... you will write your Prisma Client queries here","}","","main()","  .then(async () => {","    await prisma.\\$disconnect();","  })","  .catch(async (e) => {","    console.error(e);","    await prisma.\\$disconnect();","    process.exit(1);","  });"],"prefix":"prism"},"reqresn":{"prefix":"reqresn","body":"req: Request, res: Response, next: NextFunction"},"jwheader":{"prefix":"jwheader","body":["\/\/ prettier-ignore","function authenticateToken(req: Request, res: Response, next: NextFunction): any {","  const authHeader = req.headers[\"authorization\"]","  const token = authHeader && authHeader.split(\" \")[1]","}"]}}